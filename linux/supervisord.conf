; Comments must have a leading space: "a=b ;comment" not "a=b;comment".
; supervisord -c /etc/supervisor/supervisord.conf  # 启动supervisor
; supervisorctl -c /etc/supervisor/supervisord.conf  # 客户端连接
; supervisorctl shutdown  # 停止supervisord服务
; supervisorctl tail -f 进程名 # 查看该进程的日志,进程名是[program:xx]中的xx
; supervisorctl reload # 修改完配置文件后重新启动supervisor
; supervisorctl status # 查看supervisor监管的进程状态
; supervisorctl start 进程名 # 启动进程
; supervisorctl stop 进程名 # 停止进程
; supervisorctl stop all # 停止全部进程,start、restart、stop都不会载入最新的配置文件
; 服务端称为supervisord,主要负责在启动自身时启动管理的子进程(所有supervisord启动的进程都是其自身的子进程)
; 客户端称为supervisorctl,它提供命令行来使用supervisord服务端提供的功能,当客户端和服务器位于同一台机器上时,客户端与服务器共用同一个配置文件supervisord.conf

[unix_http_server]
file=/tmp/supervisor.sock   ; the path to the socket file
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; default is no username (open server)
;password=123               ; default is no password (open server)


[supervisord]
logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info                ; log level; default info; others: debug,warn,trace
pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200
;umask=022                   ; process file creation umask; default 022
;user=supervisord            ; setuid to this UNIX account at startup; recommended if root
;identifier=supervisor       ; supervisord identifier, default is 'supervisor'
;directory=/tmp              ; default is not to cd during start
;nocleanup=true              ; don't clean up tempfiles at start; default false
;childlogdir=/tmp            ; 'AUTO' child log dir, default $TEMP
;environment=KEY="value"     ; key value pairs to add to environment
;strip_ansi=false            ; strip ansi escape codes in logs; def. false

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

; The supervisorctl section configures how supervisorctl will connect to
; supervisord.  configure it match the settings in either the unix_http_server
; or inet_http_server section.

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
;serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as in [*_http_server] if set
;password=123                ; should be same as in [*_http_server] if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

[program:redis_single]
command=redis-server /usr/local/etc/redis.conf
process_name=%(program_name)s
numprocs=1                                       ; number of processes copies to start (def 1)
directory=/usr/local/bin                         ; directory to cwd to before exec (def no cwd)
autostart=true                                   ; start at supervisord start (default: true)
startretries=3                                   ; max # of serial start failures when starting (default 3)
autorestart=unexpected                           ; when to restart if exited after running (def: unexpected)
redirect_stderr=true                             ; redirect proc stderr to stdout (default false)
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log        
stdout_logfile_maxbytes=16MB                     ; max # logfile bytes b4 rotation (default 50MB)
stdout_logfile_backups=10                        ; # of stdout logfile backups (0 means none, default 10)
;umask=022                                       ; umask for process (default None)
;priority=999                                    ; the relative start priority (default 999)
;startsecs=1                                     ; # of secs prog must stay up to be running (def. 1)
;exitcodes=0                                     ; 'expected' exit codes used with autorestart (default 0)
;stopsignal=QUIT                                 ; signal used to kill process (default TERM)
;stopwaitsecs=10                                 ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false                               ; send stop signal to the UNIX process group (default false)
;killasgroup=false                               ; SIGKILL the UNIX process group (def false)
;user=chrism                                     ; setuid to this UNIX account to run the program
;stdout_capture_maxbytes=1MB                     ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false                     ; emit events on stdout writes (default false)
;stdout_syslog=false                             ; send stdout to syslog with process name (default false)
;stderr_logfile=/a/path                          ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB                     ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10                       ; # of stderr logfile backups (0 means none, default 10)
;stderr_capture_maxbytes=1MB                     ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false                     ; emit events on stderr writes (default false)
;stderr_syslog=false                             ; send stderr to syslog with process name (default false)

[program:mongo_single]
command=mongod --config /usr/local/etc/mongod.conf
process_name=%(program_name)s
numprocs=1                                       
directory=/usr/local/bin                         
autostart=true                                  
startretries=3                                  
autorestart=unexpected                          
redirect_stderr=true                            
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB                    
stdout_logfile_backups=5                       

[program:mysql_single]
command=mysqld
process_name=%(program_name)s
numprocs=1
directory=/usr/local/bin
autostart=true
startretries=3
autorestart=unexpected
redirect_stderr=true
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB
stdout_logfile_backups=1

[program:es_single]
command=elasticsearch
process_name=%(program_name)s
numprocs=1
directory=/usr/local/bin
autostart=false
startretries=3
autorestart=unexpected
redirect_stderr=true
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB
stdout_logfile_backups=1

[program:nginx]
command=nginx -g 'daemon off;'   ; supervisor不能监控后台程序
process_name=%(program_name)s
numprocs=1
directory=/usr/local/bin
autostart=false
startretries=3
autorestart=unexpected
redirect_stderr=true
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB
stdout_logfile_backups=1

[program:python]
command=python3 -u test_print.py     ; -u(unbuffered)参数强制其标准输出同标准错误一样不通过缓存直接打印到屏幕
process_name=%(process_num)02d
numprocs=3
directory=/Users/zgt/Desktop/        ; python需要执行文件的路径
autostart=false
startretries=3
autorestart=unexpected
redirect_stderr=true
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB
stdout_logfile_backups=1

[program:zookeeper]
command=/usr/local/Cellar/zookeeper/3.4.13/libexec/bin/zkServer.sh start-foreground /usr/local/etc/zookeeper/zoo.cfg
process_name=%(program_name)s
numprocs=1
autostart=true
startretries=3
autorestart=unexpected
redirect_stderr=true
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB
stdout_logfile_backups=1

[program:kafka]
command=kafka-server-start /usr/local/etc/kafka/server.properties
process_name=%(program_name)s
numprocs=1
autostart=true
startretries=3
autorestart=unexpected
redirect_stderr=true
stdout_logfile=/usr/local/var/log/supervisor/%(program_name)s.log
stdout_logfile_maxbytes=8MB
stdout_logfile_backups=1

[group:zookeeper-kafka]
programs=kafka,zookeeper       ; each refers to 'x' in [program:x] definitions
;priority=999                  ; the relative start priority (default 999)

;[include]
;files = relative/directory/*.conf
